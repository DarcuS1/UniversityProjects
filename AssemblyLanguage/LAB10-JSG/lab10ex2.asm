
DATA SEGMENT PARA PUBLIC 'DATA' 
 STRING DB 'THE SUM IS: $'
 MAXLEN DB 6
 ACTLEN DB ?
 BUFFER DB 4 DUP(?)
DATA ENDS 


COD SEGMENT PARA 'CODE' ;code segment definition
PROCED PROC FAR ;procedure with proced name
 ASSUME CS:COD, DS:DATA
 ;procedure
 PUSH DS ;saves ds
 XOR AX, AX ;0 in ax
 PUSH AX ;puts 0 on the stack
 MOV AX, DATA ;puts seg data in ax
 MOV DS,AX
 XOR AX, AX
 XOR BX, BX
 XOR CX,CX
 
 MOV AH, 0AH
 MOV DX, OFFSET MAXLEN
 INT 21H
 
 XOR AX, AX
 
 MOV AL, 100
 SUB BUFFER[0], '0'
 MOV CL, BUFFER[0]
 MUL CL
 ADD BX, AX
 
 XOR AX, AX
 
 MOV AL, 10
 SUB BUFFER[1], '0'
 MOV CL, BUFFER[1]
 MUL CL
 ADD BX, AX
 
 XOR CX, CX
 
 SUB BUFFER[2], '0'
 MOV CL, BUFFER[2]
 ADD BX, CX
 
 PUSH BX
 
 ;------------------------
 
 XOR BX, BX
 XOR CX,CX
 
 MOV DL, 10 ; WE PRINT AN ENDLINE, SO WE CAN PRINT THE CAPITAL LETTER IN A NEW LINE
 MOV AH, 02H
 INT 21H
 
 MOV AH, 0AH
 MOV DX, OFFSET MAXLEN
 INT 21H
 
 XOR AX, AX
 
 MOV AL, 100
 SUB BUFFER[0], '0'
 MOV CL, BUFFER[0]
 MUL CL
 ADD BX, AX
 
 XOR AX, AX
 
 MOV AL, 10
 SUB BUFFER[1], '0'
 MOV CL, BUFFER[1]
 MUL CL
 ADD BX, AX
 
 XOR CX, CX
 
 SUB BUFFER[2], '0'
 MOV CL, BUFFER[2]
 ADD BX, CX
 
 POP AX
 
 ADD AX, BX
 
 
 ;-----------------------
 XOR CX, CX
 XOR BX, BX
 
 
 MOV CL, 10
 
 MOV SI, 0
 
 NEXT1: ; LOOP TO PUT ALL THE NUMBER CHARACTERS/DIGITS OF THE AVERAGE TO THE STACK
	
	DIV CL ; WE DIVIDE BY 10, AND THE REMAINDER WILL BE IN AH, SO WE MAKE A MODULO 10 INSTRUCTION
	MOV BX, AX
	MOV AX, 0
	MOV AL, BH
	PUSH AX ; WE USE THE STACK TO STORE THE NUMBERS, IT IS VERY GOOD TO STORE HERE, OTHERWISE WE WOULD PRINT THE NUMBER VICE VERSA
	
	MOV BH, 0
	
	INC SI ; STORE THE NUMBER OF DIGITS OF THE AVERAGE
	
	MOV AX, BX
	
	CMP BX, 0 ; LOOP IF BX IS NOT 0
	JNE NEXT1
	
 XOR CX, CX
 
 MOV CX, SI
 
 MOV DL, 10 ; WE PRINT AN ENDLINE, SO WE CAN PRINT THE CAPITAL LETTER IN A NEW LINE
 MOV AH, 02H
 INT 21H
 
 MOV DX, OFFSET STRING
 MOV AH, 09H ; WE PRINT OUT THE STRING
 INT 21H
	
 NEXT2: ; LOOP TO PRINT OUT THE NUMBER
 
	POP DX
	ADD DX, 48 ; WE ADD 48 TO PRINT OUT THE DIGITS
	MOV AH, 02H ; WE PRINT OUT THE DIGITS ONE BY ONE
	INT 21H
 
 LOOP NEXT2
 
 RET ;gives the control to dos
 PROCED ENDP ;procedure end
COD ENDS
END PROCED


